Method/Endpoint,HTTP Method,Type,Description,Parameters,Status,Usage
/api/auth,POST,Authentication,Authenticate with OnlyFans using auth.json,"auth: dict (contains id, cookie, x_bc, user_agent)",WORKING,"curl -X POST http://localhost:5000/api/auth -H 'Content-Type: application/json' -d '{""auth"": {""id"": ""user_id"", ""cookie"": ""auth_cookie"", ""x_bc"": ""browser_check"", ""user_agent"": ""Mozilla/5.0...""}}'"
/api/health,GET,System,Health check endpoint,None,WORKING,curl http://localhost:5000/api/health
/api/docs,GET,Documentation,Get API documentation,None,WORKING,curl http://localhost:5000/api/docs
/api/me,GET,User Info,Get current authenticated user information,None (requires auth),WORKING,curl http://localhost:5000/api/me -H 'Authorization: Bearer TOKEN'
/api/user/{username},GET,User Info,Get profile information for a specific user,username: str (path parameter),WORKING,curl http://localhost:5000/api/user/johndoe
/api/user/{username}/posts,GET,Content,Get posts from a specific user,"username: str, limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/user/johndoe/posts?limit=50&offset=0'"
/api/user/{username}/messages,GET,Content,Get message history with a specific user,"username: str, limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/user/johndoe/messages?limit=50&offset=0'"
/api/user/{username}/stories,GET,Content,Get stories from a specific user,username: str,WORKING,curl http://localhost:5000/api/user/johndoe/stories
/api/user/{username}/highlights,GET,Content,Get story highlights from a specific user,username: str,WORKING,curl http://localhost:5000/api/user/johndoe/highlights
/api/user/{username}/mass-messages,GET,Content,Get mass messages from a specific user,"username: str, message_cutoff_id: int (optional)",WORKING,"curl 'http://localhost:5000/api/user/johndoe/mass-messages?message_cutoff_id=12345'"
/api/user/{username}/archived-stories,GET,Content,Get archived stories from a user,"username: str, limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/user/johndoe/archived-stories?limit=100&offset=0'"
/api/user/{username}/socials,GET,Social,Get social media links for a user,username: str,WORKING,curl http://localhost:5000/api/user/johndoe/socials
/api/subscriptions,GET,Subscriptions,Get active subscriptions,"limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/subscriptions?limit=50&offset=0'"
/api/chats,GET,Messages,Get chat conversations,"limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/chats?limit=50&offset=0'"
/api/mass-messages,GET,Messages,Get all mass messages,"limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/mass-messages?limit=50&offset=0'"
/api/user/{username}/message,POST,Messages,Send message to user,"username: str, text: str, media_ids: list[int] (optional)",WORKING,"curl -X POST http://localhost:5000/api/user/johndoe/message -H 'Content-Type: application/json' -d '{""text"": ""Hello!"", ""media_ids"": []}"
/api/post/{post_id}/like,POST,Interaction,Like a post,post_id: int,WORKING,curl -X POST http://localhost:5000/api/post/12345/like
/api/post/{post_id}/like,DELETE,Interaction,Unlike a post,post_id: int,WORKING,curl -X DELETE http://localhost:5000/api/post/12345/like
/api/user/{user_id}/block,POST,User Management,Block a user,user_id: int,WORKING,curl -X POST http://localhost:5000/api/user/12345/block
/api/user/{user_id}/block,DELETE,User Management,Unblock a user,user_id: int,WORKING,curl -X DELETE http://localhost:5000/api/user/12345/block
/api/transactions,GET,Financial,Get transaction history,None,WORKING,curl http://localhost:5000/api/transactions
/api/paid-content,GET,Financial,Get all paid content,"performer_id: int|str (optional), limit: int (1-100), offset: int",WORKING,"curl 'http://localhost:5000/api/paid-content?performer_id=12345&limit=10&offset=0'"
/api/user/{username}/tip,POST,Financial,Send tip to user (NOT WORKING),"username: str, amount: float, message: str (optional)",NOT WORKING - Method doesn't exist,"curl -X POST http://localhost:5000/api/user/johndoe/tip -H 'Content-Type: application/json' -d '{""amount"": 5.00, ""message"": ""Great content!""}"
/api/posts,POST,Content Creation,Create new post (NOT WORKING),"text: str, media_ids: list[int], price: float",NOT WORKING - Method doesn't exist,"curl -X POST http://localhost:5000/api/posts -H 'Content-Type: application/json' -d '{""text"": ""New post"", ""media_ids"": [], ""price"": 0}"
/api/post/{post_id},PUT,Content Creation,Edit existing post (NOT WORKING),"post_id: int, text: str, price: float",NOT WORKING - Method doesn't exist,"curl -X PUT http://localhost:5000/api/post/12345 -H 'Content-Type: application/json' -d '{""text"": ""Updated"", ""price"": 0}"
/api/post/{post_id},DELETE,Content Creation,Delete post (NOT WORKING),post_id: int,NOT WORKING - Method doesn't exist,curl -X DELETE http://localhost:5000/api/post/12345
/api/earnings,GET,Analytics,Get earnings data (NOT WORKING),"start_date: str (optional), end_date: str (optional)",NOT WORKING - Method doesn't exist,"curl 'http://localhost:5000/api/earnings?start_date=2024-01-01&end_date=2024-12-31'"
/api/analytics,GET,Analytics,Get profile analytics (NOT WORKING),"start_date: str (optional), end_date: str (optional)",NOT WORKING - Method doesn't exist,"curl 'http://localhost:5000/api/analytics?start_date=2024-01-01&end_date=2024-12-31'"
/api/fans,GET,User Management,Get fan list (NOT WORKING),"limit: int (1-100), offset: int",NOT WORKING - Method doesn't exist,"curl 'http://localhost:5000/api/fans?limit=50&offset=0'"
/api/following,GET,User Management,Get following list (NOT WORKING),"limit: int (1-100), offset: int",NOT WORKING - Method doesn't exist,"curl 'http://localhost:5000/api/following?limit=50&offset=0'"
/api/blocked-users,GET,User Management,Get blocked users list (NOT WORKING),None,NOT WORKING - Method doesn't exist,curl http://localhost:5000/api/blocked-users
/api/profile,PUT,Profile,Update profile information (NOT WORKING),"name: str, bio: str, location: str",NOT WORKING - Method doesn't exist,"curl -X PUT http://localhost:5000/api/profile -H 'Content-Type: application/json' -d '{""name"": ""John"", ""bio"": ""Creator"", ""location"": ""USA""}'"
/api/subscription-price,PUT,Subscription,Set subscription price (NOT WORKING),price: float,NOT WORKING - Method doesn't exist,"curl -X PUT http://localhost:5000/api/subscription-price -H 'Content-Type: application/json' -d '{""price"": 9.99}'"
/api/notifications,GET,Notifications,Get notifications (NOT WORKING),"limit: int (1-100), offset: int",NOT WORKING - Method doesn't exist,"curl 'http://localhost:5000/api/notifications?limit=50&offset=0'"
/api/vault,GET,Vault,Get vault media,"limit: int (1-100), offset: int",WORKING - Uses get_vault_media,"curl 'http://localhost:5000/api/vault?limit=50&offset=0'"
/api/promotions,GET,Promotions,Get active promotions,None,WORKING - Returns user.promotions attribute,curl http://localhost:5000/api/promotions
/api/promotions,POST,Promotions,Create promotional campaign (NOT WORKING),"discount: float, duration: int",NOT WORKING - Method doesn't exist,"curl -X POST http://localhost:5000/api/promotions -H 'Content-Type: application/json' -d '{""discount"": 0.5, ""duration"": 30}'"
/api/tips,GET,Financial,Get received tips (NOT WORKING),"limit: int (1-100), offset: int",NOT WORKING - Method doesn't exist,"curl 'http://localhost:5000/api/tips?limit=50&offset=0'"
/api/live-streams,GET,Streaming,Get live stream info (NOT WORKING),None,NOT WORKING - Method doesn't exist,curl http://localhost:5000/api/live-streams

SUMMARY:
- Total Endpoints: 39
- Working Endpoints: 23 (59%)
- Non-Working Endpoints: 16 (41%)

NOTES:
1. UltimaScraperAPI is primarily designed for read-only operations (content scraping)
2. Most write operations (create/edit/delete content, update profile) are not implemented
3. Some endpoints in FastAPI call methods that don't exist in the underlying API
4. Authentication is done via cookies stored in auth.json, not traditional API tokens
5. The API uses async/await pattern for all operations
6. Rate limiting is built into the session manager
7. All endpoints require authentication except /api/auth, /api/health, and /api/docs