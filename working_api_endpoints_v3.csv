Endpoint,Method,Description,Parameters,Request Body,Status,Notes
/api/auth,POST,Authenticate with OnlyFans,None,JSON: auth credentials from auth.json,Working,Returns authenticated user info
/api/auth/status,GET,Check authentication status,None,None,Working,Returns current auth status and user info
/api/me,GET,Get authenticated user info,None,None,Working,Returns detailed user info with statistics
/api/user/{username},GET,Get user information by username,username: str (path),None,Working,Returns user profile info
/api/user/{username}/posts,GET,Get user posts,"username: str (path), limit: int = 50, label: str = '', after_date: float = None",None,Working,"Fixed: Uses label and after_date params, handles PostModel objects"
/api/user/{username}/stories,GET,Get user stories,"username: str (path), limit: int = 100, offset: int = 0",None,Working,Returns user's stories
/api/user/{username}/highlights,GET,Get user highlights,"username: str (path), limit: int = 100, offset: int = 0",None,Working,Returns user's highlights
/api/user/{username}/archived-stories,GET,Get user archived stories,"username: str (path), limit: int = 100, offset: int = 0",None,Working,Returns user's archived stories
/api/user/{username}/messages,GET,Get messages with a specific user,"username: str (path), limit: int = 20, offset_id: int = None, cutoff_id: int = None",None,Working,"Fixed: Uses offset_id instead of offset, includes media URLs and all message properties"
/api/user/{username}/media,GET,Get user media,"username: str (path), limit: int = 50",None,Working,Returns user's media content
/api/user/{username}/socials,GET,Get user social media links,username: str (path),None,Working,Returns user's social media links
/api/user/{username}/message,POST,Send message to a user,username: str (path),"JSON: {text: str, media_ids: List[int] = []}",Working,Sends message with optional media
/api/subscriptions,GET,Get list of subscriptions,"limit: int = 50, sub_type: str = 'all', filter_by: str = ''",None,Working,"Fixed: Removed offset, added sub_type and filter_by params"
/api/chats,GET,Get list of chats,"limit: int = 50, offset: int = 0",None,Working,Fixed: Handles ChatModel with user attribute correctly
/api/transactions,GET,Get transactions,None,None,Working,Returns all transactions
/api/messages/all,GET,Get all messages from all chats,"limit_per_chat: int = 50, include_purchases: bool = True",None,Working,NEW: Fetches messages from all chats at once
/api/messages/all/detailed,GET,Get all messages with detailed stats,"limit_per_chat: int = 100, include_purchases: bool = True, include_tips: bool = True, only_with_media: bool = False",None,Working,NEW: Advanced version with filtering and statistics
/api/messages/mass-send,POST,Send message to all chats,"test_mode: bool = False, exclude_usernames: List[str] = []","JSON: {text: str, media_ids: List[int] = [], price: int = 0, locked_text: bool = False}",Working,NEW: Mass send to all chats with test mode
/api/messages/mass-send/filtered,POST,Send message to filtered chats,"only_subscribed: bool = False, only_active_chats: bool = False, days_active: int = 30, test_mode: bool = True, exclude_usernames: List[str] = []","JSON: {text: str, media_ids: List[int] = [], price: int = 0, locked_text: bool = False}",Working,NEW: Advanced mass send with filtering options
/api/mass-messages,GET,Get mass message statistics,"limit: int = 50, offset: int = 0",None,Working,Returns mass message queue stats
/api/vault/media,GET,Get vault media,"limit: int = 50, offset: int = 0",None,Working,Returns media from vault
/api/post/{post_id},GET,Get specific post by ID,post_id: int (path),None,Working,NEW: Fetch single post details
/api/post/{post_id}/like,POST,Like a post,post_id: int (path),None,Partial,"Updated to use favorites endpoint, but may need valid post ID"
/api/post/{post_id}/like,DELETE,Unlike a post,post_id: int (path),None,Partial,"Updated to use favorites endpoint, but may need valid post ID"
/api/post/{post_id}/comments,GET,Get post comments,"post_id: int (path), limit: int = 50, offset: int = 0",None,Working,Returns comments on a post
/api/post/{post_id}/comment,POST,Comment on a post,post_id: int (path),JSON: {text: str},Working,Add comment to a post
